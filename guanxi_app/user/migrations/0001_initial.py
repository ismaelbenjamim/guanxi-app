# Generated by Django 4.2 on 2025-02-24 21:46

from django.db import migrations, models
import django.utils.timezone
import guanxi_app.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('contact', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REPROVED', 'Reproved'), ('BANNED', 'Banned')], default='PENDING', max_length=10)),
                ('type', models.CharField(choices=[('ADMIN', 'ADMIN'), ('SUPPORT', 'SUPPORT'), ('MANAGER', 'MANAGER'), ('OPERATOR', 'OPERATOR'), ('CUSTOMER', 'CUSTOMER')], default='CUSTOMER', max_length=20)),
                ('email_verified', models.BooleanField(default=False)),
                ('is_fist_access', models.BooleanField(default=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('security_code', models.CharField(default=guanxi_app.utils.generate_security_code, max_length=6)),
                ('mother_name', models.CharField(blank=True, max_length=150, null=True)),
                ('comission_type', models.CharField(choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed')], default='PERCENTAGE', max_length=10)),
                ('comission_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('manager_star', models.IntegerField(default=0)),
                ('address_street', models.CharField(blank=True, max_length=150, null=True)),
                ('address_number', models.IntegerField(blank=True, null=True)),
                ('address_complement', models.CharField(blank=True, max_length=150, null=True)),
                ('address_district', models.CharField(blank=True, max_length=150, null=True)),
                ('address_city', models.CharField(blank=True, max_length=150, null=True)),
                ('address_state', models.CharField(blank=True, max_length=150, null=True)),
                ('address_country', models.CharField(blank=True, max_length=150, null=True)),
                ('address_postal_code', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
